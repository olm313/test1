Интеграция по FTP-протоколу
===========================
Введение
--------
В данном документе приведено описание интерфейса обмена файлами для создания SMS-рассылок на Платформе.

Логин и пароль для подключения по FTP
`````````````````````````````````````

Перед началом работы Партнёр предоставляет список IP-адресов, с которых планируется подключение, а также согласовывает с персональным менеджером имя (имена) отправителя, доступные направления трафика, объем тестовых сообщений, если требуется тестовый период. В ответ Партнеру предоставляется логин и пароль для подключения по FTP.

Общие положения
````````````````
Возможности файлового интерфейса и цели его использования
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
Файловый интерфейс позволяет авторизованному Партнеру автоматизированным образом создавать и, в случае наличия соответствующих привилегий, запускать на исполнение рассылки через загрузку файла установленного формата на Платформу. Загрузка файла производится любым удобным методом, обеспечивающим достаточную безопасность, например по FTPS или FTP через ipsec-туннель. Дополнительно имеется возможность включить генерацию файлов с отчетами о доставке сообщений из рассылки абонентам.

Также файловый интерфейс позволяет автоматизированным образом пополнять черный список номеров, связанных с аккаунтом партнера.

Формат файла и принцип взаиодействия сторон
""""""""""""""""""""""""""""""""""""""""""""
Файловый протокол обмена данными разработан с учетом синхронизации доступа к файлам между передающей и принимающей сторонами. В результате обработки исходный файл перемещается в специальный каталог, и рядом создается файл отчета. Номера абонентов должны быть записаны в файле в международном формате. Для российских сотовых сетей номер абонента состоит из 11 цифр и начинается с семерки.

Логика декомпозии сообщения на части
""""""""""""""""""""""""""""""""""""
На Платформе формат расчета длины многосегментных сообщений (сообщений, состоящих из нескольких частей) по направлению “РФ - Билайн” приведен в соответствии с алгоритмом, который использует оператор ПАО «ВымпелКом», а именно: 67 символов на одну часть составного сообщения в Unicode (кириллица) и 152 символа в кодировке GSM DEFAULT (латиница).

Также возможна загрузка рассылок с идентификаторами. Эта опция включается по запросу и распространяется одновременно и на рассылки, загружаемые через файловый интерфейс, и на рассылки, создаваемые через личный кабинет.

Протокол файлообмена
=====================
Каталоги файловой системы
-------------------------
Для каждого Партнера на файловой системе сервера Платформа настраивается два каталога: для загружаемых файлов и для архива обработанных файлов и файлов-отчетов. Партнер записывает во входной каталог файл нужного формата. Каждый файл должен иметь уникальное имя, кроме того, первая буква имени файла должна соответствовать типу операции:

* S – загрузка рассылки
* B – пополнение черного списка
* SID - загрузка рассылки с идентификаторами

Допустимые расширения файла
---------------------------
В процессе записи файл должен иметь расширение “.loading”, после окончания записи расширение следует поменять на “.data”, после чего изменять содержимое файла нельзя. Чтобы избежать дублирования имен, рекомендуется при создании файла использовать в его имени текущее системное время, например: “S20100310100000.loading”. Платформа периодически сканирует входной каталог на предмет появления файлов с расширением “.data” и обрабатывает их. Обработанный файл перемещается в каталог архива, там же создается файл отчета “<имя обработанного файла>.report”.

Если включена генерация файла-отчета о доставке, то через сутки после рассылки в каталоге архива создается файл “<имя обработанного файла>.delivery”, содержащий информацию о статусах доставки сообщений абонентам.


Вставка изображений
--------------------
тут была фоточка, но мы ее удалили


Глоссарий
==========

:Микросервис: независимое (отдельное) приложение, 
              отвечающее за выполнение одной задачи,
              например, ftransformer.

Монолит
    традиционная модель независимого приложения, которая представляет собой состав хорошо структурно оформленных прикладных модулей, разработанных в микросервисном стиле (т.е. их можно при желании выделить в микросервис); модули объединены общим кодом; например, монолитное приложение po-backend включает в свой состав модули spam-senser, spam-status, spam-api и др.

ИЗОБРАЖЕНИЕ
============

A clickable image:

.. image:: https://source.unsplash.com/200x200/daily?cute+puppy
   :target: https://unsplash.com/
   :height: 200
   :width: 200

https://github.com/olm313/test1/blob/main/docs/source/_static/pic_1.png

A clickable image:

.. image:: https://github.com/olm313/test1/blob/main/docs/source/_static/pic_1.png
   :target: https://www.google.com/
   :height: 200
   :width: 200


Изображение-ссылка

.. image:: https://github.com/olm313/test1/blob/main/docs/source/_static/pic_1.png
  :target: https://google.com


Изображение по доке Sphinx

.. image:: https://github.com/olm313/test1/blob/main/docs/source/_static/pic_1.png
   :height: 100px
   :width: 200 px
   :scale: 50 %
   :alt: alternate text
   :align: right

Таблицы
========

+----------------+------------------+------------+----------+
| Здесь название | в в этом месте-- | Третьего --| и так    |
| первого столбца|наименование      | здесь!     | далее    |
|таблицы         |второго (столбца) |            |          |
+================+==================+============+==========+
|детализация № 1 | какое-то         | ещё        | и ещё    |
|                | поснение         |            |          |       
+----------------+------------------+------------+----------+
| детализация № 2| Объединение чеек                         | 
+----------------+------------------+------------+----------+




